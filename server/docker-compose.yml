services:
  sensos-controller:
    build: ./controller
    container_name: sensos-controller
    restart: always
    depends_on:
      - sensos-database
      - sensos-wireguard
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      WG_IP: ${WG_IP}
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - sensos_wireguard_config:/config
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - sensos_network

  sensos-wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: sensos-wireguard
    restart: unless-stopped
    env_file: .env
    cap_add:
      - NET_ADMIN
    environment:
      - LOG_CONFS=true
    volumes:
      - sensos_wireguard_config:/config
    ports:
      - "${WG_PORT:-51820}:51820/udp"
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - sensos_network

  sensos-database:
    build: ./database
    container_name: sensos-database
    restart: always
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sensos_database:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sensos"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - sensos_network

volumes:
  sensos_database:
    name: sensos_database
  sensos_wireguard_config:
    name: sensos_wireguard_config

networks:
  sensos_network:
    driver: bridge
