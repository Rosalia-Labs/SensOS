services:
  sensos-controller:
    build:
      context: ./controller
      args:
        VERSION_MAJOR: ${VERSION_MAJOR}
        VERSION_MINOR: ${VERSION_MINOR}
        VERSION_PATCH: ${VERSION_PATCH}
        VERSION_SUFFIX: ${VERSION_SUFFIX}
        GIT_COMMIT: ${GIT_COMMIT}
        GIT_BRANCH: ${GIT_BRANCH}
        GIT_TAG: ${GIT_TAG}
        GIT_DIRTY: ${GIT_DIRTY}
    container_name: sensos-controller
    restart: always
    depends_on:
      - sensos-database
      - sensos-wireguard
      - sensos-registry
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      WG_SERVER_IP: ${WG_SERVER_IP}
      VERSION_MAJOR: ${VERSION_MAJOR}
      VERSION_MINOR: ${VERSION_MINOR}
      VERSION_PATCH: ${VERSION_PATCH}
      VERSION_SUFFIX: ${VERSION_SUFFIX}
      GIT_COMMIT: ${GIT_COMMIT}
      GIT_BRANCH: ${GIT_BRANCH}
      GIT_TAG: ${GIT_TAG}
      GIT_DIRTY: ${GIT_DIRTY}
      SENSOS_REGISTRY_PORT: ${SENSOS_REGISTRY_PORT}
      SENSOS_REGISTRY_USER: ${SENSOS_REGISTRY_USER}
      EXPOSE_CONTAINERS: ${EXPOSE_CONTAINERS}
    cap_add:
      - NET_ADMIN
    volumes:
      - sensos_wireguard_config:/config
      - sensos_controller_wg_dir:/etc/wireguard
      - /var/run/docker.sock:/var/run/docker.sock
    expose:
      - "8000"
    networks:
      - sensos_network

  sensos-wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: sensos-wireguard
    restart: unless-stopped
    env_file: .env
    cap_add:
      - NET_ADMIN
    environment:
      LOG_CONFS: "true"
    volumes:
      - sensos_wireguard_config:/config
    ports:
      - "${WG_PORT:-51820}:51820/udp"
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - sensos_network

  sensos-database:
    build: ./database
    container_name: sensos-database
    restart: always
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sensos_database:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - sensos_network

  sensos-registry:
    image: registry:2
    container_name: sensos-registry
    restart: always
    environment:
      REGISTRY_HTTP_ADDR: "0.0.0.0:${SENSOS_REGISTRY_PORT:-5000}"
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: "/auth/htpasswd"
      REGISTRY_HTTP_TLS_CERTIFICATE: /auth/domain.crt
      REGISTRY_HTTP_TLS_KEY: /auth/domain.key
    volumes:
      - sensos_registry:/var/lib/registry
      - ./.registry_auth:/auth
    expose:
      - "5000"
    networks:
      - sensos_network

  sensos-api-proxy:
    build:
      context: ./api-proxy
    container_name: sensos-api-proxy
    depends_on:
      - sensos-controller
    restart: always
    env_file: .env
    privileged: true
    cap_add:
      - NET_ADMIN
    ports:
      - "${API_PORT:-8000}:8000"
      - "${SENSOS_REGISTRY_PORT:-5000}:5000"
    volumes:
      - sensos_api_proxy_wg_config:/etc/wireguard
      - ./.registry_auth:/auth
    networks:
      - sensos_network

volumes:
  sensos_database:
    name: sensos_database
  sensos_wireguard_config:
    name: sensos_wireguard_config
  sensos_controller_wg_dir:
    name: sensos_controller_wg_dir
  sensos_registry:
    name: sensos_registry
  sensos_api_proxy_wg_config:
    name: sensos_api_proxy_wg_config

networks:
  sensos_network:
    driver: bridge
