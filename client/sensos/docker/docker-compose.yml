services:
  sensos-client-test-database:
    build: ./database
    container_name: sensos-client-test-database
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  sensos-client-test-sound-capture:
    build: ./sound_capture
    container_name: sensos-client-test-sound-capture
    restart: always
    depends_on:
      - sensos-client-test-database
    volumes:
      - ./sound_capture/record-audio.py:/app/record-audio.py
      - ./soundscape.wav:/app/test.wav
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      AUDIO_SOURCE: ${AUDIO_SOURCE}
      RECORD_DURATION: ${RECORD_DURATION}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-client-test-birdnet:
    build: ./birdnet
    container_name: sensos-client-test-birdnet
    restart: always
    depends_on:
      - sensos-client-test-database
      - sensos-client-test-sound-capture
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
