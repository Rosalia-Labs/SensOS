#!/bin/bash

CONFIG_DIR="${HOME}/etc"
CONFIG_FILE="$CONFIG_DIR/modem.conf"

# Ensure necessary directories exist
mkdir -p "$CONFIG_DIR"

# Default values
SERVICE=""
MODEM_IFACE="wwan0"
MODEM_INTERNAL_NAME="cdc-wdm0"
ENABLE_SERVICE="true"

usage() {
    echo "Usage: $0 --service <service> [--modem-iface <iface>] [--modem-internal-name <internal_name>] [--no-enable]"
    exit 1
}

# Process command-line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --service)
        SERVICE="$2"
        shift 2
        ;;
    --modem-iface)
        MODEM_IFACE="$2"
        shift 2
        ;;
    --modem-internal-name)
        MODEM_INTERNAL_NAME="$2"
        shift 2
        ;;
    --no-enable)
        ENABLE_SERVICE="false"
        shift
        ;;
    --help)
        usage
        ;;
    *)
        echo "Unknown option: $1"
        usage
        ;;
    esac
done

# Ensure a service is specified
if [ -z "$SERVICE" ]; then
    echo "Error: Service must be specified."
    usage
fi

# Set APN based on the service value
case "$SERVICE" in
1nce) APN="iot.1nce.net" ;;
*)
    echo "Service '$SERVICE' is not supported by this script."
    exit 1
    ;;
esac

# Save configuration
cat >"$CONFIG_FILE" <<EOF
SERVICE=$SERVICE
MODEM_IFACE=$MODEM_IFACE
MODEM_INTERNAL_NAME=$MODEM_INTERNAL_NAME
APN=$APN
EOF

echo "Modem configuration saved to $CONFIG_FILE."

# Enable and start the modem service unless --no-enable was used
if [[ "$ENABLE_SERVICE" == "true" ]]; then
    echo "Enabling and starting modem service..."

    # Ensure systemd recognizes the new service
    sudo systemctl daemon-reload

    # Only enable the service if it's not already enabled
    if ! sudo systemctl is-enabled modem-connection &>/dev/null; then
        sudo systemctl enable modem-connection
    fi

    sudo systemctl restart modem-connection
    echo "Modem service enabled and started."
else
    echo "Modem service NOT enabled (per user request)."
fi
