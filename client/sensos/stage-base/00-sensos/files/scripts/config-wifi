#!/bin/bash
# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Rosalia Labs LLC

set -e

script_name=$(basename "$0")
config_dir="/sensos/etc"
config_file="$config_dir/wifi.conf"

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh

declare -A default_vars
load_defaults "$script_name" default_vars

get_default() {
    local varname="$1"
    local fallback="$2"
    echo "${default_vars[$varname]:-$fallback}"
}

register_option --ssid ssid "WiFi SSID (required)" "$(get_default ssid)"
register_option --password password "WiFi Password (required)" "$(get_default password)"
register_option --iface iface "WiFi Interface" "$(get_default iface wlan0)"
register_option --enable-service enable_service "Enable sensos-wifi.service" "$(get_default enable_service true)"
register_option --start-service start_service "Start sensos-wifi.service" "$(get_default start_service false)"

# Parse CLI
parse_switches "$script_name" "$@"

# Validate required arguments
if [[ -z "$ssid" ]]; then
    echo "ERROR: --ssid must be specified."
    exit 1
fi

if [[ -z "$password" ]]; then
    echo "ERROR: --password must be specified."
    exit 1
fi

# Ensure output directory exists
mkdir -p "$config_dir"

# Write config file
cat >"$config_file" <<EOF
SSID=$ssid
PASSWORD=$password
IFACE=$iface
EOF

echo "WiFi configuration saved to $config_file"

if [[ "$enable_service" == "true" ]]; then
    echo "Enabling sensos-wifi.service..."
    sudo systemctl daemon-reload
    sudo systemctl enable sensos-wifi.service
fi

if [[ "$start_service" == "true" ]]; then
    echo "Starting sensos-wifi.service..."
    sudo systemctl daemon-reload
    sudo systemctl restart sensos-wifi.service
fi
