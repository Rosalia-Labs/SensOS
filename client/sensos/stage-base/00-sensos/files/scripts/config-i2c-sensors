#!/bin/bash
set -e

script_name=$(basename "$0")

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh

config_path="/sensos/etc/i2c-sensors.conf"
mkdir -p /sensos/etc

declare -A default_vars
load_defaults "/sensos/etc/defaults.conf" "$script_name"

get_default() {
    local varname="$1"
    local fallback="$2"
    echo "${default_vars[$varname]:-$fallback}"
}

register_option --bme280 bme280 "0=none, 1=0x76, 2=0x77, 3=both" "$(get_default BME280_ADDR)"
register_option --scd30 scd30 "Enable SCD30 (true/false)" "$(get_default SCD30 false)"
register_option --scd4x scd4x "Enable SCD4X (true/false)" "$(get_default SCD4X false)"
register_option --ads1015 ads1015 "Enable ADS1015 (true/false)" "$(get_default ADS1015 false)"
register_option --i2c-gps i2c_gps "Enable GPS module on I2C bus (true/false)" "$(get_default I2C_GPS false)"
register_option --enable-service enable_service "Enable systemd timer" "$(get_default enable_service true)"
register_option --start-service start_service "Start systemd timer" "$(get_default start_service false)"

parse_switches "$script_name" "$@"

# Normalize casing so we can write uppercase variables to config
BME280_ADDR="${bme280:-}"
SCD30="${scd30:-}"
SCD4X="${scd4x:-}"
ADS1015="${ads1015:-}"
I2C_GPS="${i2c_gps:-}"

echo "Writing sensor config to $config_path..."
cat >"$config_path" <<EOF
# Auto-generated by $script_name
BME280_ADDR=${BME280_ADDR:-}
SCD30=${SCD30:-}
SCD4X=${SCD4X:-}
ADS1015=${ADS1015:-}
I2C_GPS=${I2C_GPS:-}
EOF

echo "Done. Config contents:"
cat "$config_path"

if [[ "$enable_service" == "true" ]]; then
    echo "🔧 Enabling read-i2c-sensors.timer..."
    sudo systemctl daemon-reload
    sudo systemctl enable read-i2c-sensors.timer
fi

if [[ "$start_service" == "true" ]]; then
    echo "▶️ Starting read-i2c-sensors.timer..."
    sudo systemctl daemon-reload
    sudo systemctl start read-i2c-sensors.timer
fi
