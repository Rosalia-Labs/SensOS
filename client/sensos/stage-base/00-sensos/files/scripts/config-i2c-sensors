#!/bin/bash
set -e

script_name=$(basename "$0")

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh

config_path="/sensos/etc/i2c-sensors.conf"
mkdir -p /sensos/etc

declare -A default_vars
load_defaults "/sensos/etc/defaults.conf" "$script_name"

get_default() {
    local varname="$1"
    local fallback="$2"
    echo "${default_vars[$varname]:-$fallback}"
}

register_option --interval interval "Default polling interval (seconds)" "$(get_default INTERVAL_SEC 60)"

register_option --bme280-0x76 bme280_76 "Enable BME280 at 0x76 (true/false)" "$(get_default BME280_0x76 false)"
register_option --bme2800x76-interval bme280_76_interval "Interval for BME280 at 0x76 (seconds)" "$(get_default BME280_0x76_INTERVAL_SEC "")"

register_option --bme280-0x77 bme280_77 "Enable BME280 at 0x77 (true/false)" "$(get_default BME280_0x77 false)"
register_option --bme2800x77-interval bme280_77_interval "Interval for BME280 at 0x77 (seconds)" "$(get_default BME280_0x77_INTERVAL_SEC "")"

register_option --scd30 scd30 "Enable SCD30 (true/false)" "$(get_default SCD30 false)"
register_option --scd30-interval scd30_interval "Polling interval for SCD30 (seconds)" "$(get_default SCD30_INTERVAL_SEC "")"

register_option --scd4x scd4x "Enable SCD4X (true/false)" "$(get_default SCD4X false)"
register_option --scd4x-interval scd4x_interval "Polling interval for SCD4X (seconds)" "$(get_default SCD4X_INTERVAL_SEC "")"

register_option --ads1015 ads1015 "Enable ADS1015 (true/false)" "$(get_default ADS1015 false)"
register_option --ads1015-interval ads1015_interval "Polling interval for ADS1015 (seconds)" "$(get_default ADS1015_INTERVAL_SEC "")"

register_option --i2c-gps i2c_gps "Enable GPS module on I2C bus (true/false)" "$(get_default I2C_GPS false)"
register_option --i2c-gps-interval i2c_gps_interval "Polling interval for I2C GPS (seconds)" "$(get_default I2C_GPS_INTERVAL_SEC "")"

register_option --enable-service enable_service "Enable systemd timer" "$(get_default enable_service true)"
register_option --start-service start_service "Start systemd timer" "$(get_default start_service false)"

parse_switches "$script_name" "$@"

# Auto-enable sensors if interval is set
[[ -n "${bme2800x76_interval:-}" ]] && bme280_0x76=true
[[ -n "${bme2800x77_interval:-}" ]] && bme280_0x77=true
[[ -n "${scd30_interval:-}" ]] && scd30=true
[[ -n "${scd4x_interval:-}" ]] && scd4x=true
[[ -n "${ads1015_interval:-}" ]] && ads1015=true
[[ -n "${i2c_gps_interval:-}" ]] && i2c_gps=true

# Write config
cat >"$config_path" <<EOF
# Auto-generated by $script_name
INTERVAL_SEC=${interval:-60}
BME280_0x76=${bme280_0x76:-false}
BME280_0x76_INTERVAL_SEC=${bme2800x76_interval:-}
BME280_0x77=${bme280_0x77:-false}
BME280_0x77_INTERVAL_SEC=${bme2800x77_interval:-}
SCD30=${scd30:-false}
SCD30_INTERVAL_SEC=${scd30_interval:-}
SCD4X=${scd4x:-false}
SCD4X_INTERVAL_SEC=${scd4x_interval:-}
ADS1015=${ads1015:-false}
ADS1015_INTERVAL_SEC=${ads1015_interval:-}
I2C_GPS=${i2c_gps:-false}
I2C_GPS_INTERVAL_SEC=${i2c_gps_interval:-}
EOF

echo "Done. Config contents:"
cat "$config_path"

if [[ "$enable_service" == "true" ]]; then
    echo "🔧 Enabling read-i2c-sensors.service..."
    sudo systemctl daemon-reload
    sudo systemctl enable read-i2c-sensors.service
fi

if [[ "$start_service" == "true" ]]; then
    echo "▶️ Starting read-i2c-sensors.service..."
    sudo systemctl daemon-reload
    sudo systemctl start read-i2c-sensors.service
fi
