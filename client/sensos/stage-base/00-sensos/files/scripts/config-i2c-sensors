#!/bin/bash
set -e

script_name=$(basename "$0")

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh

config_path="/sensos/etc/i2c-sensors.conf"
mkdir -p /sensos/etc

declare -A default_vars
load_defaults "/sensos/etc/defaults.conf" "$script_name"

get_default() {
    local varname="$1"
    local fallback="$2"
    echo "${default_vars[$varname]:-$fallback}"
}

register_option --interval interval "Default polling interval (seconds)" "$(get_default INTERVAL_SEC 60)"

# Optional per-sensor overrides (auto-enables them if set)
register_option --bme280-0x76-interval bme280_0x76_interval "Interval for BME280 at 0x76 (seconds)" "$(get_default BME280_0x76_INTERVAL_SEC "")"
register_option --bme280-0x77-interval bme280_0x77_interval "Interval for BME280 at 0x77 (seconds)" "$(get_default BME280_0x77_INTERVAL_SEC "")"
register_option --scd30-interval scd30_interval "Interval for SCD30 (seconds)" "$(get_default SCD30_INTERVAL_SEC "")"
register_option --scd4x-interval scd4x_interval "Interval for SCD4X (seconds)" "$(get_default SCD4X_INTERVAL_SEC "")"
register_option --ads1015-interval ads1015_interval "Interval for ADS1015 (seconds)" "$(get_default ADS1015_INTERVAL_SEC "")"
register_option --i2c-gps-interval i2c_gps_interval "Interval for I2C GPS (seconds)" "$(get_default I2C_GPS_INTERVAL_SEC "")"

register_option --enable-service enable_service "Enable systemd timer" "$(get_default enable_service true)"
register_option --start-service start_service "Start systemd timer" "$(get_default start_service false)"

parse_switches "$script_name" "$@"

{
    echo "# Auto-generated by $script_name"
    [[ -n "$interval" ]] && echo "INTERVAL_SEC=$interval"

    [[ -n "$bme280_0x76_interval" ]] && echo "BME280_0x76_INTERVAL_SEC=$bme280_0x76_interval"
    [[ -n "$bme280_0x77_interval" ]] && echo "BME280_0x77_INTERVAL_SEC=$bme280_0x77_interval"
    [[ -n "$scd30_interval" ]] && echo "SCD30_INTERVAL_SEC=$scd30_interval"
    [[ -n "$scd4x_interval" ]] && echo "SCD4X_INTERVAL_SEC=$scd4x_interval"
    [[ -n "$ads1015_interval" ]] && echo "ADS1015_INTERVAL_SEC=$ads1015_interval"
    [[ -n "$i2c_gps_interval" ]] && echo "I2C_GPS_INTERVAL_SEC=$i2c_gps_interval"
} >"$config_path"

echo "‚úÖ Wrote config to $config_path:"
cat "$config_path"

output_dir=/sensos/data/microenv/
mkdir -p $output_dir
sudo chown -R sensos-admin:sensos-data $output_dir
sudo chmod -R 2775 $output_dir

if [[ "$enable_service" == "true" ]]; then
    echo "üîß Enabling read-i2c-sensors.service..."
    sudo systemctl daemon-reload
    sudo systemctl enable read-i2c-sensors.service
fi

if [[ "$start_service" == "true" ]]; then
    echo "‚ñ∂Ô∏è Starting read-i2c-sensors.service..."
    sudo systemctl daemon-reload
    sudo systemctl start read-i2c-sensors.service
fi
