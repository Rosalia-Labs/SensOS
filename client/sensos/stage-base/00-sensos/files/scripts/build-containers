#!/bin/bash
set -e

script_name=$(basename "$0")

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh
source /sensos/lib/docker-utils.sh

load_defaults /sensos/etc/defaults.conf "$script_name"

# Register CLI options
register_option --local-only LOCAL_ONLY "Restrict to local images only (do not pull from network)" "false"

parse_switches "$script_name" "$@"

cd /sensos/docker

CFG_FILE="/sensos/etc/network.conf"
CONNECTIVITY_MODE=""
BANDWIDTH_POLICY=""

if [[ ! -f "$CFG_FILE" ]]; then
    echo "ERROR: Missing /sensos/etc/network.conf — run config-network first." >&2
    exit 1
fi

if [[ ! -f .env ]]; then
    echo "ERROR: Missing /sensos/docker/.env — run config-docker first." >&2
    exit 1
fi

while IFS='=' read -r key value; do
    key="${key// /}"
    value="${value// /}"
    case "$key" in
    CONNECTIVITY_MODE) CONNECTIVITY_MODE="${value,,}" ;;
    BANDWIDTH_POLICY) BANDWIDTH_POLICY="${value,,}" ;;
    esac
done <"$CFG_FILE"

if [[ -z "$CONNECTIVITY_MODE" || -z "$BANDWIDTH_POLICY" ]]; then
    echo "[FATAL] CONNECTIVITY_MODE or BANDWIDTH_POLICY not set in $CFG_FILE." >&2
    exit 1
fi

OFFLINE=false

if [[ "$CONNECTIVITY_MODE" == "offline" || "$BANDWIDTH_POLICY" == "restricted" ]]; then
    OFFLINE=true
fi

if [[ "$LOCAL_ONLY" == "true" ]]; then
    OFFLINE=true
elif [[ "$LOCAL_ONLY" == "false" ]]; then
    OFFLINE=false
fi

echo "[INFO] Effective build mode: $([[ "$OFFLINE" == true ]] && echo "LOCAL ONLY" || echo "NETWORK ALLOWED")"

echo "[INFO] Loading any available images from local tarballs..."
load_images_from_disk

# Check for missing images
missing_images=()
while IFS= read -r docker_dir; do
    image_name="sensos-client-$(basename "$docker_dir" | tr '_' '-')"
    if ! docker image inspect "$image_name" >/dev/null 2>&1; then
        missing_images+=("$image_name")
    fi
done < <(find . -type f -name 'Dockerfile' -exec dirname {} \;)

# Decide based on missing images
if [[ "${#missing_images[@]}" -gt 0 ]]; then
    echo "[INFO] Missing Docker images detected:"
    printf '  %s\n' "${missing_images[@]}"

    if [[ "$OFFLINE" == true ]]; then
        echo "[FATAL] Cannot build missing images: local-only mode enforced (--local-only=true)." >&2
        exit 1
    else
        echo "[INFO] Building missing images (network access allowed)..."
        build_missing_images
        echo "[INFO] Image build complete."
    fi
else
    echo "[INFO] All required Docker images are already available locally. No build needed."
fi
