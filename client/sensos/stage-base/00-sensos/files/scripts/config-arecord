#!/bin/bash
# config-arecord.sh: Auto-detect arecord settings and write configuration to $HOME/etc/arecord.conf
# Supports overriding all settings via command-line switches.
#
# Usage: config-arecord.sh [options]
# Options:
#   -d DEVICE       Override device string (e.g., plughw:1,0)
#   -F FORMAT       Override recording format (e.g., S16_LE)
#   -c CHANNELS     Override channel count (e.g., 4)
#   -R RATE         Override sample rate (e.g., 44100)
#   -T MAX_TIME     Override recording file duration in seconds (e.g., 900 for 15 minutes)
#   -b BASE_DIR     Set the base directory where sound files will be stored
#   -h              Display this help message

Usage() {
    cat <<EOF
Usage: $0 [options]

Options:
  -d DEVICE       Override device string (e.g., plughw:1,0)
  -F FORMAT       Override recording format (e.g., S16_LE)
  -c CHANNELS     Override channel count (e.g., 4)
  -R RATE         Override sample rate (e.g., 44100)
  -T MAX_TIME     Override recording file duration in seconds (default is 900 seconds)
  -b BASE_DIR     Set the base directory where sound files will be stored
  -h              Display this help message
EOF
}

# Default variables
device=""
override_format=""
override_channels=""
override_rate=""
max_time=""
base_dir=""

# Parse command-line options
while getopts "d:F:c:R:T:b:h" opt; do
    case "$opt" in
    d) device="$OPTARG" ;;
    F) override_format="$OPTARG" ;;
    c) override_channels="$OPTARG" ;;
    R) override_rate="$OPTARG" ;;
    T) max_time="$OPTARG" ;;
    b) base_dir="$OPTARG" ;;
    h)
        Usage
        exit 0
        ;;
    *)
        Usage
        exit 1
        ;;
    esac
done

# Set default max_time if not provided (900 seconds = 15 minutes)
if [ -z "$max_time" ]; then
    max_time=900
fi

# Ensure arecord is available
if ! command -v arecord >/dev/null 2>&1; then
    echo "Error: arecord command not found. Please install alsa-utils." >&2
    exit 1
fi

# If device not provided, list available devices and prompt the user
if [ -z "$device" ]; then
    echo "Available recording devices (from arecord -l):"
    arecord -l
    read -p "Enter the device string you want to use (e.g., plughw:1,0): " device
    if [ -z "$device" ]; then
        echo "No device specified. Exiting."
        exit 1
    fi
fi

echo "Querying hardware parameters for device $device..."
params=$(arecord -D "$device" --dump-hw-params 2>/dev/null)
if [ -z "$params" ]; then
    echo "Failed to query device parameters. Verify the device string and your permissions." >&2
    exit 1
fi

# Determine FORMAT, CHANNELS, and RATE â€“ use overrides if provided
if [ -z "$override_format" ]; then
    detected_format=$(echo "$params" | grep -m1 "FORMAT:" | awk '{print $2}')
    format="$detected_format"
else
    format="$override_format"
fi

if [ -z "$override_channels" ]; then
    detected_channels=$(echo "$params" | grep -m1 "CHANNELS:" | awk '{print $2}')
    channels="$detected_channels"
else
    channels="$override_channels"
fi

if [ -z "$override_rate" ]; then
    detected_rate=$(echo "$params" | grep -m1 "RATE:" | awk '{print $2}')
    rate="$detected_rate"
else
    rate="$override_rate"
fi

# Use provided base_dir or set default ($HOME/sounds)
if [ -z "$base_dir" ]; then
    base_dir="$HOME/sounds"
fi

echo "Detected/Configured settings:"
echo "  DEVICE:   $device"
echo "  FORMAT:   $format"
echo "  CHANNELS: $channels"
echo "  RATE:     $rate"
echo "  MAX_TIME: $max_time"
echo "  BASE_DIR: $base_dir"

# Ensure the configuration directory exists
config_dir="$HOME/etc"
mkdir -p "$config_dir"
config_file="$config_dir/arecord.conf"

# Build configuration file content
config_content="# Auto-generated arecord configuration
# You can override these settings by editing this file manually.

DEVICE=\"$device\"
FORMAT=\"$format\"
CHANNELS=$channels
RATE=$rate
MAX_TIME=$max_time
BASE_DIR=\"$base_dir\"
"

# Write the configuration file
echo "$config_content" >"$config_file"

echo "Configuration written to $config_file"

echo "Enabling and starting sensos-arecord.service."
sudo systemctl daemon-reload
sudo systemctl enable sensos-arecord.service
sudo systemctl start sensos-arecord.service
