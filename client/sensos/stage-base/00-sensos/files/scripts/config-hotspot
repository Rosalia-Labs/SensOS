#!/bin/bash
set -e

script_name=$(basename "$0")
config_dir="/sensos/etc"
config_file="$config_dir/wifi_access_point.conf"
log_dir="/sensos/log"

source /sensos/lib/load-defaults.sh
source /sensos/lib/parse-switches.sh

declare -A default_vars
load_defaults "$script_name" default_vars

get_default() {
    local varname="$1"
    local fallback="$2"
    echo "${default_vars[$varname]:-$fallback}"
}

# Register options
register_option --ssid "WiFi SSID (required)" "$(get_default ssid)"
register_option --password "WiFi password (8â€“63 chars, required)" "$(get_default password)"
register_option --interface "WiFi interface name" "$(get_default interface)"
register_option --band "WiFi band (e.g., bg, a)" "$(get_default band)"
register_option --channel "WiFi channel" "$(get_default channel)"
register_option --country-code "ISO country code" "$(get_default country_code)"
register_option --low-txpower "Reduce transmit power" "$(get_default low_txpower false)"
register_option --power-save "Enable WiFi power management" "$(get_default power_save false)"
register_option --limit-width "Limit channel width to 20MHz" "$(get_default limit_width false)"
register_option --beacon-interval "Increase beacon interval" "$(get_default beacon_interval false)"
register_option --enable-service "Enable wifi-access-point.service" "$(get_default enable_service true)"
register_option --start-service "Start wifi-access-point.service" "$(get_default start_service false)"

# Parse CLI
parse_switches "$script_name" "$@"

# Validate required args
if [[ -z "$ssid" || -z "$password" ]]; then
    echo "ERROR: Both --ssid and --password are required."
    exit 1
fi

if [[ ${#password} -lt 8 || ${#password} -gt 63 ]]; then
    echo "ERROR: WPA2 password must be between 8 and 63 characters."
    exit 1
fi

# Ensure necessary directories exist
mkdir -p "$config_dir" "$log_dir"

# Write config file
{
    echo "[WiFi]"
    echo "ssid = $ssid"
    echo "password = $password"
    [[ -n "$interface" ]] && echo "interface = $interface"
    [[ -n "$band" ]] && echo "band = $band"
    [[ -n "$channel" ]] && echo "channel = $channel"
    [[ -n "$country_code" ]] && echo "country = $country_code"
    echo ""
    echo "[PowerSaving]"
    echo "low_txpower = $low_txpower"
    echo "power_save = $power_save"
    echo "limit_width = $limit_width"
    echo "beacon_interval = $beacon_interval"
} >"$config_file"

echo "WiFi Access Point configuration saved to $config_file."

# Reload and manage systemd service
echo "Reloading systemd..."
sudo systemctl daemon-reload

if [[ "$enable_service" == "true" ]]; then
    echo "Disabling auto-hotspot.service..."
    sudo systemctl disable --now auto-hotspot.service || true
    echo "Enabling wifi-access-point.service..."
    sudo systemctl enable wifi-access-point.service
    echo "Enabling ssh.service..."
    sudo systemctl enable ssh
fi

if [[ "$start_service" == "true" ]]; then
    echo "Starting wifi-access-point.service..."
    sudo systemctl restart wifi-access-point.service
    echo "Starting SSH service..."
    sudo systemctl start ssh
fi
