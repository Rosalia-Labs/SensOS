services:
  sensos-client-database:
    build:
      context: ./database
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-database
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DB_DATA_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  sensos-client-sound-capture:
    build:
      context: ./sound_capture
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-sound-capture
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUDIO_FORMAT_CODE: ${AUDIO_FORMAT_CODE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - "${AUDIO_DIRECTORY}:/mnt/audio_recordings"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-client-birdnet:
    build:
      context: ./birdnet
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-birdnet
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUDIO_FORMAT_CODE: ${AUDIO_FORMAT_CODE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-sound-analyzer:
    build:
      context: ./sound_analyzer
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-sound-analyzer
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUDIO_FORMAT_CODE: ${AUDIO_FORMAT_CODE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-client-db-manager:
    build:
      context: ./db_manager
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-db-manager
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      AUDIO_DIRECTORY: ${AUDIO_DIRECTORY}
    volumes:
      - "${AUDIO_DIRECTORY}:/mnt/audio_recordings"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-system-recorder:
    build:
      context: ./system_recorder
      platforms: [linux/arm64]
      args:
        NO_LOCAL: ${NO_LOCAL:-false}
    container_name: sensos-client-system-recorder
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AUDIO_FORMAT_CODE: ${AUDIO_FORMAT_CODE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/rootfs:ro
      - /sensos/data:/sensos/data:ro
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  sensos-db-data:
