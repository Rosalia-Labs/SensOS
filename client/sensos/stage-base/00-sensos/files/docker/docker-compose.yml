services:
  sensos-client-database:
    build:
      context: ./database
      platforms: [linux/arm64]
    container_name: sensos-client-database
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DB_DATA_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  sensos-client-sound-capture:
    build:
      context: ./sound_capture
      platforms: [linux/arm64]
    container_name: sensos-client-sound-capture
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      AUDIO_SOURCE: ${AUDIO_SOURCE}
      AUDIO_DEVICE: ${AUDIO_DEVICE}
      AUDIO_FORMAT: ${AUDIO_FORMAT}
      FILE_STABLE_THRESHOLD: ${FILE_STABLE_THRESHOLD}
    volumes:
      - "${AUDIO_DIRECTORY}:/mnt/audio_recordings"
    devices:
      - /dev/snd:/dev/snd
    group_add:
      - "audio"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-client-birdnet:
    build:
      context: ./birdnet
      platforms: [linux/arm64]
    container_name: sensos-client-birdnet
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      FULL_SPECTRUM_BINS: ${FULL_SPECTRUM_BINS}
      BIOACOUSTIC_BINS: ${BIOACOUSTIC_BINS}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  sensos-sound-analyzer:
    build:
      context: ./sound_analyzer
      platforms: [linux/arm64]
    container_name: sensos-client-sound-analyzer
    restart: always
    depends_on:
      - sensos-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      FULL_SPECTRUM_BINS: ${FULL_SPECTRUM_BINS}
      BIOACOUSTIC_BINS: ${BIOACOUSTIC_BINS}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  sensos-db-data:
